name: auto-release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # 每周一定时构建

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Determine trigger type
        id: trig
        run: |
          echo "manual=${{ github.event_name == 'workflow_dispatch' }}" >> $GITHUB_OUTPUT

      - name: Clone upstream wireguard-go
        run: |
          git clone https://github.com/WireGuard/wireguard-go.git
          cd wireguard-go
          git rev-parse HEAD > ../commit_hash.txt
          tag=$(git describe --tags --dirty 2>/dev/null || echo unknown)
          echo "Detected tag: $tag"
          printf 'package main\n\nconst Version = "%s"\n' "$tag" > version.go
          cat version.go
          cd ..

      - name: Get latest commit hash
        id: commit
        run: |
          COMMIT=$(cat commit_hash.txt)
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV

      - name: Check if release already exists
        if: ${{ steps.trig.outputs.manual != 'true' }}
        id: check_release
        uses: actions/github-script@v7
        with:
          script: |
            const commit = process.env.COMMIT;
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const exists = releases.data.some(r => r.tag_name === `wireguard-${commit}`);
            core.setOutput('skip', exists);
        env:
          COMMIT: ${{ steps.commit.outputs.commit }}

      - name: Skip build if already released
        if: ${{ steps.trig.outputs.manual != 'true' && steps.check_release.outputs.skip == 'true' }}
        run: echo "Already released. Skipping build." && exit 0

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build wireguard-go for linux/amd64
        run: |
          cd wireguard-go
          mkdir -p ../build
          GOOS=linux GOARCH=amd64 go build -o ../build/wireguard-go-linux-amd64 .

      - name: Archive build
        run: |
          cd build
          tar -czvf wireguard-go-linux-amd64.tar.gz wireguard-go-linux-amd64

      - name: Create or update release
        uses: softprops/action-gh-release@v2
        with:
          name: wireguard-go ${{ env.COMMIT }}
          tag_name: wireguard-${{ env.COMMIT }}
          files: build/wireguard-go-linux-amd64.tar.gz
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
